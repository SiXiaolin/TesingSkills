1. 效率
   装build,配置DSN，启动iserver， build solution 通常需要很长的时间. 为什么不制作template给开发和测试使用.
2. 分工
   测试的作用，当测试发现一个bug的时候，通常测试会和开发一起分析出现的原因，分析计算的逻辑，并进一步指导开发fix 这个bug...但是..问题来了.. 有个测试需要一个A功能，其他测试可能需要B功能，如果两段有矛盾，开发通常会改来改去.
   所以是不是应该有一个全局的指导者，或者开发或者测试有一个review来衡量这段修改会不会导致其他的问题. PM 在哪里.
3. 代码共享
   在我们的系统中，有时候有公共的代码，但是我们没有共享，或者再第一次共享，之后又修改的地方，另外用到这段代码的地方又没有改.
4. 单元测试.
   没有单元测试，没有模块测试，似乎出来就是端到端的测试，那么问题来了... 端到端的测试其实很难追根溯源到引起错误的原因的...因此测试工程师需要花费很多时间...但是假如有单元测试的话，就可以避免这些工作.
   单元测试其实还是由开发来做比较合适. 就像我们的工程师会出现 ...处理if ...elseif..elseif..却忘了处理最后一个else这种情况..我们端到端的测试很有可能会忽略这种case..但是用户用到的时候再发现就很迟了.
   
   
   
